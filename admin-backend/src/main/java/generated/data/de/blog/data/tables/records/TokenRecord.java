/*
 * This file is generated by jOOQ.
 */
package de.blog.data.tables.records;


import de.blog.data.tables.Token;

import jakarta.validation.constraints.NotNull;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenRecord extends UpdatableRecordImpl<TokenRecord> implements Record4<UUID, UUID, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.token.id</code>.
     */
    public TokenRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.token.id</code>.
     */
    @NotNull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.token.session_id</code>.
     */
    public TokenRecord setSessionId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.token.session_id</code>.
     */
    public UUID getSessionId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.token.token</code>.
     */
    public TokenRecord setToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.token.token</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.token.created_at</code>.
     */
    public TokenRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.token.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Token.TOKEN.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Token.TOKEN.SESSION_ID;
    }

    @Override
    public Field<String> field3() {
        return Token.TOKEN.TOKEN_;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Token.TOKEN.CREATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getSessionId();
    }

    @Override
    public String component3() {
        return getToken();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getSessionId();
    }

    @Override
    public String value3() {
        return getToken();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public TokenRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TokenRecord value2(UUID value) {
        setSessionId(value);
        return this;
    }

    @Override
    public TokenRecord value3(String value) {
        setToken(value);
        return this;
    }

    @Override
    public TokenRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TokenRecord values(UUID value1, UUID value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(UUID id, UUID sessionId, String token, LocalDateTime createdAt) {
        super(Token.TOKEN);

        setId(id);
        setSessionId(sessionId);
        setToken(token);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(de.blog.data.tables.pojos.Token value) {
        super(Token.TOKEN);

        if (value != null) {
            setId(value.getId());
            setSessionId(value.getSessionId());
            setToken(value.getToken());
            setCreatedAt(value.getCreatedAt());
            resetChangedOnNotNull();
        }
    }
}
