/*
 * This file is generated by jOOQ.
 */
package de.blog.data.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String username;
    private String password;
    private String salt;
    private String email;
    private Boolean emailVerified;
    private String firstname;
    private String lastname;
    private LocalDateTime createdAt;
    private UUID createdBy;
    private LocalDateTime updatedAt;
    private UUID updatedBy;

    public UserEntity() {}

    public UserEntity(UserEntity value) {
        this.id = value.id;
        this.username = value.username;
        this.password = value.password;
        this.salt = value.salt;
        this.email = value.email;
        this.emailVerified = value.emailVerified;
        this.firstname = value.firstname;
        this.lastname = value.lastname;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public UserEntity(
        UUID id,
        String username,
        String password,
        String salt,
        String email,
        Boolean emailVerified,
        String firstname,
        String lastname,
        LocalDateTime createdAt,
        UUID createdBy,
        LocalDateTime updatedAt,
        UUID updatedBy
    ) {
        this.id = id;
        this.username = username;
        this.password = password;
        this.salt = salt;
        this.email = email;
        this.emailVerified = emailVerified;
        this.firstname = firstname;
        this.lastname = lastname;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.user_entity.id</code>.
     */
    @NotNull
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.user_entity.id</code>.
     */
    public UserEntity setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.username</code>.
     */
    @Size(max = 255)
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>public.user_entity.username</code>.
     */
    public UserEntity setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.password</code>.
     */
    @Size(max = 255)
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>public.user_entity.password</code>.
     */
    public UserEntity setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.salt</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getSalt() {
        return this.salt;
    }

    /**
     * Setter for <code>public.user_entity.salt</code>.
     */
    public UserEntity setSalt(String salt) {
        this.salt = salt;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.email</code>.
     */
    @Size(max = 255)
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>public.user_entity.email</code>.
     */
    public UserEntity setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.email_verified</code>.
     */
    public Boolean getEmailVerified() {
        return this.emailVerified;
    }

    /**
     * Setter for <code>public.user_entity.email_verified</code>.
     */
    public UserEntity setEmailVerified(Boolean emailVerified) {
        this.emailVerified = emailVerified;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.firstname</code>.
     */
    @Size(max = 255)
    public String getFirstname() {
        return this.firstname;
    }

    /**
     * Setter for <code>public.user_entity.firstname</code>.
     */
    public UserEntity setFirstname(String firstname) {
        this.firstname = firstname;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.lastname</code>.
     */
    @Size(max = 255)
    public String getLastname() {
        return this.lastname;
    }

    /**
     * Setter for <code>public.user_entity.lastname</code>.
     */
    public UserEntity setLastname(String lastname) {
        this.lastname = lastname;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.user_entity.created_at</code>.
     */
    public UserEntity setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.created_by</code>.
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.user_entity.created_by</code>.
     */
    public UserEntity setCreatedBy(UUID createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.user_entity.updated_at</code>.
     */
    public UserEntity setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>public.user_entity.updated_by</code>.
     */
    public UUID getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>public.user_entity.updated_by</code>.
     */
    public UserEntity setUpdatedBy(UUID updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserEntity other = (UserEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.salt == null) {
            if (other.salt != null)
                return false;
        }
        else if (!this.salt.equals(other.salt))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.emailVerified == null) {
            if (other.emailVerified != null)
                return false;
        }
        else if (!this.emailVerified.equals(other.emailVerified))
            return false;
        if (this.firstname == null) {
            if (other.firstname != null)
                return false;
        }
        else if (!this.firstname.equals(other.firstname))
            return false;
        if (this.lastname == null) {
            if (other.lastname != null)
                return false;
        }
        else if (!this.lastname.equals(other.lastname))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.salt == null) ? 0 : this.salt.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.emailVerified == null) ? 0 : this.emailVerified.hashCode());
        result = prime * result + ((this.firstname == null) ? 0 : this.firstname.hashCode());
        result = prime * result + ((this.lastname == null) ? 0 : this.lastname.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserEntity (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(salt);
        sb.append(", ").append(email);
        sb.append(", ").append(emailVerified);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}
